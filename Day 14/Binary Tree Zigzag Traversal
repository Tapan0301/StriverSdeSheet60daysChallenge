#include<bits/stdc++.h>
/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    // Write your code here!
        vector<int> ans;
        if(root == NULL) return ans;
        
        queue<BinaryTreeNode<int> *> q;
        q.push(root);
        bool flag=true;
        while(!q.empty()){
            int sz=q.size();
            vector<int> level;
            for(int i=0;i<sz;i++){
                BinaryTreeNode<int> *nd=q.front();
                q.pop();
                
                level.push_back(nd->data);
                if(nd->left !=NULL) q.push(nd->left);
                if(nd->right !=NULL) q.push(nd->right);
            }
            if(flag){
                flag=false;
                for(int i=0;i<level.size();i++){
                    ans.push_back(level[i]);
                }
            }else{
                reverse(level.begin(),level.end());
                flag=true;
                for(int i=0;i<level.size();i++){
                    ans.push_back(level[i]);
                }
            }
        }
        return ans;
}
