/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> * root){

    // Write your code here.
    vector<int> ans;
        queue<pair<BinaryTreeNode<int> *,int>> q;
        map<int,int> mp;
        q.push({root,0});
        
        while(!q.empty()){
            auto it=q.front();
            q.pop();
            BinaryTreeNode<int> * nd=it.first;
            int line=it.second;
            mp[line]=nd->data;
            
            if(nd->left){
                q.push({nd->left,line-1});
            }
            if(nd->right){
                q.push({nd->right,line+1});
            }
        }
        
        for(auto it:mp){
            ans.push_back(it.second);
        }
        return ans;
}
